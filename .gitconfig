[user]
    email = askedrelic@gmail.com
    name = Matt Behrens
[color]
    pager = true
    ui    = auto
[color "branch"]
    current = yellow reverse
    local   = yellow
    remote  = green
[color "diff"]
    meta       = yellow bold
    frag       = magenta bold
    old        = red bold
    new        = green bold
    whitespace = red reverse
[color "status"]
    added     = yellow
    changed   = green
    untracked = cyan
[core]
    #Only 1.6.6 allows ~ references
    excludesfile = ~/.gitignore
    whitespace   = fix,-indent-with-non-tab,trailing-space,cr-at-eol
    quotepath    = false
    pager        = less -FRSX
[alias]
    st = status
    ci = commit -v
    cm = commit -m
    br = branch
    co = checkout
    ls = ls-files
    dt = difftool
    mt = mergetool

    # Commit all changes
    ca = commit -a
    # Switch to a branch, creating it if necessary
    go = checkout -B

    #figure out what a revision is
    human = name-rev --name-only --refs=refs/heads/*

    #simple log with branches, requires git > 1.6
    hist = log --pretty=format:'%Cred%h%Creset%C(yellow)%d%Creset (%Cgreen%cr%Creset) [%Cblue%an%Creset] %s ' --graph --abbrev-commit --date=relative
    h    = log --pretty=format:'%Cred%h%Creset%C(yellow)%d%Creset (%Cgreen%cr%Creset) [%Cblue%an%Creset] %s ' --graph --abbrev-commit --date=relative

    hist-flat = log --pretty=format:'%Cred%h%Creset%C(yellow)%d%Creset (%Cgreen%cr%Creset) [%Cblue%an%Creset] %s ' --abbrev-commit --date = relative --date-order --no-merges
    hf        = log --pretty=format:'%Cred%h%Creset%C(yellow)%d%Creset (%Cgreen%cr%Creset) [%Cblue%an%Creset] %s ' --abbrev-commit --date = relative --date-order --no-merges

    hist-refs = log --all --graph --decorate --oneline --simplify-by-decoration --no-merges

    hp               = log -p --abbrev-commit --date=relative
    hist-patch       = log -p --abbrev-commit --date=relative
    hist-patch-word  = log -p --abbrev-commit --date=relative
    hist-stat        = log -M --summary --stat --abbrev-commit --date=relative --no-merges --date-order

    #diff
    staged     = diff --patience --cached
    un         = diff --patience
    unstaged   = diff --patience
    both       = diff HEAD

    changes    = diff --name-status -r
    diff-stat  = diff --stat -r
    ds         = diff --stat -r

    type       = cat-file -t
    dump       = cat-file -p

    ls-ignored = ls-files --others -i --exclude-standard
[pack]
    threads = 0
[branch]
    #When branching off a remote branch, automatically let the local branch track the remote branch:
    autosetupmerge = true
    #Always rebase!
    autosetuprebase = always
[github]
    user = askedrelic
[diff]
    #Allow git diff to do basic rename and copy detection
    renames = copies
    #Tell git diff to use mnemonic prefixes (index, work tree, commit, object) instead of the standard a and b notation
    mnemonicprefix = true
[push]
    #When pushing without giving a refspec, push the current branch to its upstream branch.
    default = tracking
[merge]
    # Include summaries of merged commits in newly created merge commit messages
    log = true    
    tool = p4merge
[mergetool]
    keepBackup = false
    prompt     = false
[difftool]
    prompt = false
[grep]
    extendedRegexp = true
